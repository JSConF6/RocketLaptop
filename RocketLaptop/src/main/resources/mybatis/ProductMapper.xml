<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rocket.laptop.repository.ProductMapper">

	<insert id="productInsert" parameterType="ProductDto">
		insert into product (product_code, category_code, product_name, product_price, product_sales, product_stock)
		values(#{product_code}, #{category_code}, #{product_name}, #{product_price}, #{product_sales}, #{product_stock})
	</insert>
	
	<select id="getProductList" resultType="ProductListDto" parameterType="Map">
		select pr.* 
		from (select @ROWNUM := @ROWNUM + 1 AS rnum, p.*
	  		  from (select @ROWNUM:=0) AS r, (select p.product_code, p.product_stock, c.category_name, p.product_name, p.product_price, p.product_reg_date, i.product_img_name, i.product_img_original_name
				    from product p, product_img i, category c
					where p.product_code = i.product_code
					and p.category_code = c.category_code
					and i.product_img_type = 1
            		order by p.product_reg_date desc) p) pr
		where rnum &gt;= #{start} and rnum &lt;= #{end}
	</select>
	
	<select id="getProductListCount" resultType="Int">
		select count(*)
		from product
	</select>
	
	<select id="getProductDetail" resultType="ProductDetailDto" parameterType="String">
		select *
		from product p, category c
		where p.category_code = c.category_code
		and p.product_code = #{product_code}
	</select>
	
	<delete id="productDelete" parameterType="String">
		delete from product
		where product_code = #{product_code}
	</delete>
	
	<update id="productModify" parameterType="ProductDto">
		update product
		set product_name = #{product_name}, product_price = #{product_price}, product_stock = #{product_stock}
		where product_code = #{product_code}
	</update>
	
	<select id="getBestProductList" parameterType="Map" resultType="ProductListDto">
		select pr.* 
		from (select @ROWNUM := @ROWNUM + 1 AS rnum, p.*
	  		  from (select @ROWNUM:=0) AS r, (select p.product_code, c.category_name, p.product_name, p.product_price, p.product_reg_date, i.product_img_name, i.product_img_original_name
				    from product p, product_img i, category c
					where p.product_code = i.product_code
					and p.category_code = c.category_code
					and i.product_img_type = 1
            		order by p.product_sales desc) p) pr
		where rnum &gt;= #{start} and rnum &lt;= #{end}
	</select>
	
	<select id="getCategoryProductListCount" parameterType="int" resultType="int">
		select count(*)
		from product
		where category_code = #{catgory_code}
	</select>
	
	<select id="getCategoryProductList" parameterType="Map" resultType="ProductListDto">
		select pr.* 
		from (select @ROWNUM := @ROWNUM + 1 AS rnum, p.*
	  		  from (select @ROWNUM:=0) AS r, (select p.product_code, c.category_name, p.product_name, p.product_price, p.product_reg_date, i.product_img_name, i.product_img_original_name
				    from product p, product_img i, category c
					where p.product_code = i.product_code
					and p.category_code = c.category_code
					and c.category_code = #{category_code}
					and i.product_img_type = 1
            		order by p.product_sales desc) p) pr
		where rnum &gt;= #{start} and rnum &lt;= #{end}
	</select>
	
	<select id="getSearchProductListCount" resultType="int" parameterType="Map">
		select count(*)
		from product p, category c
		where p.CATEGORY_CODE = c.CATEGORY_CODE
		<include refid="search" />
	</select>
	
	<select id="getSearchProductList" parameterType="Map" resultType="ProductListDto">
		select pr.* 
		from (select @ROWNUM := @ROWNUM + 1 AS rnum, p.*
	  		  from (select @ROWNUM:=0) AS r, (select p.product_code, c.category_name, p.product_name, p.product_price, p.product_reg_date, i.product_img_name, i.product_img_original_name
				    from product p, product_img i, category c
					where p.product_code = i.product_code
					and p.category_code = c.category_code
					and i.product_img_type = 1
					<include refid="search" />
            		order by p.product_sales desc) p) pr
		where rnum &gt;= #{start} and rnum &lt;= #{end}
	</select>
	
	<sql id="search">
		<if test="search_field != null">
			and
			<choose>
				<when test="search_field == 'product_name'">p.product_name</when>
				<when test="search_field == 'category_name'">c.category_name</when>
			</choose>
			like #{search_word}
		</if>
	</sql>
	
	<update id="updateProductStock" parameterType="Map">
		update product
		set product_stock = product_stock - #{order_de_amount}
		where product_code = #{product_code}
	</update>
	
	<update id="updateOrderCancelProductStock" parameterType="Map">
		update product
		set product_stock = product_stock + #{order_de_amount}
		where product_code = #{product_code}
	</update>

</mapper>