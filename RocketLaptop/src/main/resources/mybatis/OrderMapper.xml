<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rocket.laptop.repository.OrderMapper">
	
	<select id="getOrderList" resultType="OrderDto" parameterType="Map">
		select ord.* 
		from (select @ROWNUM := @ROWNUM + 1 AS rnum, o.*
	  		  from (select @ROWNUM:=0) AS r, 
	  	    	   (select * 
	  			   from order_tb
	  			   where user_id = #{user_id}
	  		  	   order by order_date desc) o) ord
		where rnum &gt;= #{start} and rnum &lt;= #{end}
	</select>
	
	<select id="getOrderListCount" resultType="Int">
		select count(*)
		from order_tb
		where user_id = #{user_id}
	</select>
	
	<select id="getAdminOrderList" resultType="OrderDto" parameterType="Map">
		select ord.* 
		from (select @ROWNUM := @ROWNUM + 1 AS rnum, o.*
	  		  from (select @ROWNUM:=0) AS r, 
	  	    	   (select * 
	  			   from order_tb
	  		  	   order by order_date desc) o) ord
		where rnum &gt;= #{start} and rnum &lt;= #{end}
	</select>
	
	<select id="getAdminOrderListCount" resultType="Int">
		select count(*)
		from order_tb
	</select>
	
	<select id="getOrder" parameterType="String" resultType="OrderDto">
		select *
		from order_tb
		where order_id = #{order_id}
	</select>
	
	<select id="getOrderDetail" parameterType="String" resultType="OrderDetailDto">
		select p.PRODUCT_CODE, p.CATEGORY_CODE, c.CATEGORY_NAME, p.PRODUCT_NAME, 
	   		   p.PRODUCT_PRICE, o.order_de_amount, i.product_img_name, i.PRODUCT_IMG_ORIGINAL_NAME, o.review_yn
		from product p, order_detail o, product_img i, category c
		where p.product_code = o.product_code
		and o.order_id = #{order_id}
		and p.PRODUCT_CODE = i.PRODUCT_CODE
		and p.CATEGORY_CODE = c.CATEGORY_CODE
		and i.PRODUCT_IMG_TYPE = 1;
	</select>
	
	<update id="OrderDeliveryUpdate" parameterType="Map">
		update order_tb
		set order_state = #{delivery_text}
		where order_id = #{order_id}
	</update>
	
	<select id="getOrderViewList" parameterType="Map" resultType="OrderViewDto">
		select c.cart_num, c.product_code, c.user_id, c.order_de_amount,
			   ct.category_name, p.product_name, p.product_price, i.product_img_name
		from cart c, product p, category ct, product_img i
		where user_id = #{user_id}
		and c.product_code = p.product_code
		and p.category_code = ct.category_code
		and p.product_code = i.product_code
		and i.product_img_type = 1
		and cart_num in
		<foreach item="cartNum" collection="cartNumList"
				open="(" separator="," close=")">
			#{cartNum}
		</foreach>
	</select>
	
	<select id="getMainOrderViewList" parameterType="String" resultType="OrderViewDto">
		select p.product_code, ct.category_name, p.product_name, p.product_price, i.product_img_name
		from product p, category ct, product_img i
		where p.product_code = #{product_code}
		and p.category_code = ct.category_code
		and p.product_code = i.product_code
		and i.product_img_type = 1
	</select>
	
	<insert id="orderAdd" parameterType="OrderDto">
		insert into order_tb (order_id, user_id, order_name, user_address1, user_address2, user_address3, order_phone, order_totalprice)
		values(#{order_id}, #{user_id}, #{order_name}, #{user_address1}, #{user_address2}, #{user_address3}, #{order_phone}, #{order_totalprice})
	</insert>
	
	<insert id="orderDetailAdd" parameterType="Map">
		insert into order_detail (order_id, product_code, order_de_amount)
		values(#{orderDto.order_id}, #{product_code}, #{order_de_amount})
	</insert>
	
	<select id="getUserOrderDetail" parameterType="Map" resultType="OrderDto">
		select *
		from order_tb
		where order_id = #{order_id}
		and user_id = #{user_id}
	</select>
	
	<select id="getUserOrderList" parameterType="String" resultType="UserOrderDto">
		select o.order_id, o.ORDER_STATE, p.PRODUCT_CODE, p.PRODUCT_NAME, 
			   p.PRODUCT_PRICE, ot.ORDER_DE_AMOUNT, c.CATEGORY_NAME, i.PRODUCT_IMG_NAME, o.ORDER_DATE 
		from order_tb o, order_detail ot, product p, category c, product_img i
		where o.ORDER_ID  = ot.ORDER_ID
		and ot.PRODUCT_CODE = p.PRODUCT_CODE
		and p.CATEGORY_CODE = c.CATEGORY_CODE
		and p.PRODUCT_CODE = i.PRODUCT_CODE
		and i.PRODUCT_IMG_TYPE = 1
		and o.user_id = #{user_id}
	</select>
	
	<select id="getUserOrderListCount" parameterType="String" resultType="UserOrderDto">
		select o.order_id, count(*) as count
		from order_tb o, order_detail ot, product p, category c, product_img i
		where o.ORDER_ID  = ot.ORDER_ID
		and ot.PRODUCT_CODE = p.PRODUCT_CODE
		and p.CATEGORY_CODE = c.CATEGORY_CODE
		and p.PRODUCT_CODE = i.PRODUCT_CODE
		and i.PRODUCT_IMG_TYPE = 1
		and o.user_id = #{user_id}
		group by o.ORDER_ID
	</select>
	
	<select id="getDeliveryCount" parameterType="Map" resultType="int">
		select count(*)
		from order_tb
		where user_id = #{user_id}
		and order_state = #{order_state}
	</select>
	
	<select id="getAjaxOrderListCount" parameterType="Map" resultType="int">
		select count(*)
		from order_tb
		where user_id = #{user_id}
		<if test="order_state != '전체'">
			and order_state = #{order_state}
		</if>
	</select>
	
	<select id="getAjaxOrderList" parameterType="Map" resultType="OrderDto">
		select ord.* 
		from (select @ROWNUM := @ROWNUM + 1 AS rnum, o.*
	  		  from (select @ROWNUM:=0) AS r, 
	  	    	   (select * 
	  			   from order_tb
	  			   where user_id = #{user_id}
	  			   <if test="order_state != '전체'">
					and order_state = #{order_state}
				   </if>
	  		  	   order by order_date desc) o) ord
		where rnum &gt;= #{start} and rnum &lt;= #{end}
	</select>
	
	<select id="getAjaxUserOrderList" parameterType="Map" resultType="UserOrderDto">
		select o.order_id, o.ORDER_STATE, p.PRODUCT_CODE, p.PRODUCT_NAME, 
			   p.PRODUCT_PRICE, ot.ORDER_DE_AMOUNT, c.CATEGORY_NAME, i.PRODUCT_IMG_NAME, o.ORDER_DATE 
		from order_tb o, order_detail ot, product p, category c, product_img i
		where o.ORDER_ID  = ot.ORDER_ID
		and ot.PRODUCT_CODE = p.PRODUCT_CODE
		and p.CATEGORY_CODE = c.CATEGORY_CODE
		and p.PRODUCT_CODE = i.PRODUCT_CODE
		and i.PRODUCT_IMG_TYPE = 1
		and o.user_id = #{user_id}
		<if test="order_state != '전체'">
			and o.order_state = #{order_state}
		</if>
	</select>
	
	<select id="getAjaxUserOrderListCount" parameterType="String" resultType="UserOrderDto">
		select o.order_id, count(*) as count
		from order_tb o, order_detail ot, product p, category c, product_img i
		where o.ORDER_ID  = ot.ORDER_ID
		and ot.PRODUCT_CODE = p.PRODUCT_CODE
		and p.CATEGORY_CODE = c.CATEGORY_CODE
		and p.PRODUCT_CODE = i.PRODUCT_CODE
		and i.PRODUCT_IMG_TYPE = 1
		and o.user_id = #{user_id}
		<if test="order_state != '전체'">
			and o.order_state = #{order_state}
		</if>
		group by o.ORDER_ID
	</select>
	
</mapper>